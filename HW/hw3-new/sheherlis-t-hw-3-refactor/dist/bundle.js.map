{"version":3,"file":"bundle.js","mappings":"MAAA,IAAIA,EAAyBC,SAASC,cAAc,cAChDC,EAAkCF,SAASC,cAAc,cACzDE,EAAkCH,SAASC,cAAc,cACzDG,EAAuCJ,SAASC,cAAc,mBAC9DI,EAAuCL,SAASC,cAAc,mBAC9DK,EAA2BN,SAASC,cAAc,UAClDM,EAA4BP,SAASC,cAAc,iBAEnDO,EAAiCR,SAASS,iBAAiB,WAC3DC,EAAqCV,SAASS,iBAAiB,UAC/DE,EAAoCX,SAASS,iBAAiB,SAC9DG,EAAoCZ,SAASS,iBAAiB,aAC9DI,EAAqCb,SAASS,iBAAiB,SAC/DK,EAAmCd,SAASS,iBAAiB,gBAE3DM,EAAiB,WACjBC,EAAqBD,EAAS,WAC9BE,EAAsBF,EAAS,YAEjCG,EAAe,GACfC,EAAwB,GACxBC,EAAyB,GAEvBC,EAAiBC,aAAaC,QAAQP,GACtCQ,EAAkBF,aAAaC,QAAQN,GAEzCI,IACHF,EAAwBM,KAAKC,MAAML,IAGhCG,IACHJ,EAAyBK,KAAKC,MAAMF,IAGrC,IACMG,EAAU,uCAGVC,EAAU,SAACC,GAChB,IAAIC,EAAM,IAAIC,eAEdD,EAAIE,OAASC,EAEbH,EAAII,QAAUC,EAEdL,EAAIM,KAAK,MAAOP,GAChBC,EAAIO,MACL,EAGMJ,EAAa,SAACK,GAEnB,IAAIR,EAAMQ,EAAEC,OACRC,EAAMf,KAAKC,MAAMI,EAAIW,cACzBvB,EAAewB,OAAOC,OAAOH,GAI5BF,EAAEC,OAAOK,YAAYC,SAAS,SAC9BP,EAAEC,OAAOK,YAAYC,SAAS,SAG1BP,EAAEC,OAAOK,YAAYC,SAAS,QAASC,IAClCR,EAAEC,OAAOK,YAAYC,SAAS,SAASE,IAIhDC,EAAiB9B,GACjB+B,EAAW/B,GAGXN,EAASsC,SAAQ,SAACZ,GAAM,OAACA,EAAEa,MAAMC,OAAS,KAAlB,KAGdd,EAAEC,OAAOK,YAAYC,SAAS,eAExCQ,IACAC,EAAiBpC,GACjB+B,EAAW/B,GAGXN,EAASsC,SACR,SAACZ,GAAM,OAAEA,EAAEa,MAAMC,OAAS,MAASd,EAAEa,MAAMI,MAAQ,KAA5C,IAGV,EAGMpB,EAAY,WACjBqB,QAAQC,IAAI,mBACb,EAEMC,EAAc,SAACpB,GACpB,IAAIT,EA3DW,8BA6Df2B,QAAQC,IAAInB,EAAEC,QAEdxC,EAAU4D,UAAY,GAGC,SAAnBrB,EAAEC,OAAOqB,OAAuC,SAAnBtB,EAAEC,OAAOqB,OACzC/B,GAAO,MAAQS,EAAEC,OAAOqB,MAAQ,YAAcjC,EAC9CC,EAAQC,IAGmB,cAAnBS,EAAEC,OAAOqB,OACjB/B,GAAOS,EAAEC,OAAOqB,MAAQ,YAAcjC,EACtCC,EAAQC,IAGmB,cAAnBS,EAAEC,OAAOqB,OACjBC,EAAcxD,EAAkBuD,MAElC,EAGMZ,EAAmB,SAACc,GACN,MAAfxD,GAAqBA,EAAYyD,SAErCxD,EAAaoD,UACZ,sDAEDG,EAAMZ,SAAQ,SAACc,GACdjE,EAAUkE,mBACT,YACA,sQAGyED,EAAOE,UAAS,gFAC1BF,EAAOG,KAAI,4HAG5CH,EAAOG,KAAI,kEACOH,EAAOI,MAAMC,OAAM,0DAC3BL,EAAOM,SAAQ,wDACjBN,EAAOO,OAAM,uDACdP,EAAOQ,UAAS,oGAKvD,GACD,EAGMlB,EAAmB,SAACQ,GACN,MAAfxD,GAAqBA,EAAYyD,SAErCxD,EAAaoD,UACZ,sDAEDG,EAAMZ,SAAQ,SAACc,GACdjE,EAAUkE,mBACT,YACA,0QAG0ED,EAAOE,UAAS,iFAC1BF,EAAOG,KAAI,iJAG7CH,EAAOG,KAAI,yDACFH,EAAOS,QAAO,wDACfT,EAAOU,OAAM,6DACRV,EAAOW,YAAW,0DACrBX,EAAOY,eAAc,YAAIZ,EAAOa,aAAY,oGAKtF,GACD,EAGM/B,EAAa,WAAM,OAAAgC,EAAe5E,EAAa0D,MAA5B,EAInBb,EAAa,WAClB,OAAQ5C,EAAayD,OACpB,IAAK,SACJkB,EAAe,UACf,MAED,IAAK,SACJA,EAAe,UACf,MAED,IAAK,QACJA,EAAe,SACf,MAED,IAAK,UACJA,EAAe,WACf,MAED,IAAK,KACJ5D,EAAeA,EAAa6D,QAC3B,SAACC,GACA,OAAAA,EAAQV,SAASzB,SAAS,OAASmC,EAAQV,SAASzB,SAAS,KAA7D,IAIL,EAGMQ,EAAkB,WAAM,OAAA4B,EAAc7E,EAAkBwD,MAAhC,EAGxBsB,EAAgB,SAAC5C,GACtB,IAAI6C,EAAUjE,EAAakE,SAAS9C,EAAEC,OAAO8C,QAAQC,QAEvB,aAA1BhD,EAAEC,OAAO8C,QAAQE,KAChBnE,EAAuByB,SAASsC,IACnC/D,EAAuBoE,OAAOpE,EAAuBqE,QAAQN,GAAU,GACvE7D,aAAaoE,QAAQzE,EAAaQ,KAAKkE,UAAUvE,MAEjDA,EAAuBwE,KAAKT,GAC5B7D,aAAaoE,QAAQzE,EAAaQ,KAAKkE,UAAUvE,KAEd,YAA1BkB,EAAEC,OAAO8C,QAAQE,OACvBpE,EAAsB0B,SAASsC,IAClChE,EAAsBqE,OAAOrE,EAAsBsE,QAAQN,GAAU,GACrE7D,aAAaoE,QAAQ1E,EAAYS,KAAKkE,UAAUxE,MAEhDA,EAAsByE,KAAKT,GAC3B7D,aAAaoE,QAAQ1E,EAAYS,KAAKkE,UAAUxE,KAGnD,EAGM0E,EAAY,WACjBrF,EAAQR,SAASS,iBAAiB,WAClCC,EAAYV,SAASS,iBAAiB,UACtCE,EAAWX,SAASS,iBAAiB,SACrCG,EAAWZ,SAASS,iBAAiB,aACrCI,EAAYb,SAASS,iBAAiB,QACvC,EAGMwC,EAAa,SAACa,GACnB+B,IACA,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAMiC,OAAQD,IACjCtF,EAAMsF,GAAGT,QAAQC,MAAQ,UAAGQ,GAC5BpF,EAAUoF,GAAGT,QAAQC,MAAQ,UAAGQ,GAChCnF,EAASmF,GAAGT,QAAQC,MAAQ,UAAGQ,GAC/BlF,EAASkF,GAAGT,QAAQC,MAAQ,UAAGQ,GAC/BjF,EAAUiF,GAAGT,QAAQC,MAAQ,UAAGQ,GAChCtF,EAAMsF,GAAGE,QAAUd,CAErB,EAGMJ,EAAiB,SAACmB,GACvB/E,EAAeA,EAAa6D,QAAO,SAACC,GACnC,OAAAA,EAAQV,SAASzB,SAASoD,EAA1B,GAEF,EAGMhB,EAAgB,SAACgB,GACtB/E,EAAeA,EAAa6D,QAAO,SAACmB,GACnC,OAAAA,EAASzB,QAAQ5B,SAASoD,EAA1B,GAEF,EAGMpC,EAAgB,SAACD,GACR,aAAVA,EACkC,IAAjCzC,EAAsB4E,QACzBxF,EAAaoD,UACZ,6DACD5D,EAAU4D,UAAY,KAEtBX,EAAiB7B,GACjB0E,IAGAjF,EAASsC,SAAQ,SAACZ,GAAM,OAACA,EAAEa,MAAMC,OAAS,KAAlB,IAExBrD,EAAUkE,mBACT,WACA,mCAA4BL,EAAK,qBAElCtD,EAAcN,SAASC,cAAc,WACzB+F,QAAUG,GAEH,cAAVvC,IAC4B,IAAlCxC,EAAuB2E,QAC1BxF,EAAaoD,UACZ,6DACD5D,EAAU4D,UAAY,KAEtBL,EAAiBlC,GACjByE,IAGAjF,EAASsC,SACR,SAACZ,GAAM,OAAEA,EAAEa,MAAMC,OAAS,MAASd,EAAEa,MAAMI,MAAQ,KAA5C,IAGRxD,EAAUkE,mBACT,WACA,mCAA4BL,EAAK,qBAElCtD,EAAcN,SAASC,cAAc,WACzB+F,QAAUG,GAGzB,EAGMA,EAAiB,SAAC7D,GACA,aAAnBA,EAAEC,OAAOqB,OACZzC,EAAwB,GACxBG,aAAaoE,QAAQ1E,EAAYS,KAAKkE,UAAUxE,KACnB,cAAnBmB,EAAEC,OAAOqB,QACnBxC,EAAyB,GACzBE,aAAaoE,QAAQzE,EAAaQ,KAAKkE,UAAUvE,KAElDyC,EAAcvB,EAAEC,OAAOqB,OACvBtD,EAAYyD,QACb,EAEAjD,EAAQoC,SAAQ,SAACkD,GAChBA,EAAOC,iBAAiB,QAAS3C,EAClC,G","sources":["webpack://sheherlis-t-hw-3-refactor/./src/main.ts"],"sourcesContent":["let container: HTMLElement = document.querySelector(\".container\")!;\r\nlet fishDropDown: HTMLSelectElement = document.querySelector(\"#fish-list\")!;\r\nlet bugsDropDown: HTMLSelectElement = document.querySelector(\"#bugs-list\")!;\r\nlet villagersDropDown: HTMLSelectElement = document.querySelector(\"#villagers-list\")!;\r\nlet favoritesDropDown: HTMLSelectElement = document.querySelector(\"#favorites-list\")!;\r\nlet clearButton: HTMLElement = document.querySelector(\"#clear\")!;\r\nlet instructions: HTMLElement = document.querySelector(\"#instructions\")!;\r\n\r\nlet cards: NodeListOf<HTMLElement> = document.querySelectorAll(\".result\")!;\r\nlet cardFront: NodeListOf<HTMLElement> = document.querySelectorAll(\".front\")!;\r\nlet cardBack: NodeListOf<HTMLElement> = document.querySelectorAll(\".back\")!;\r\nlet cardImgs: NodeListOf<HTMLElement> = document.querySelectorAll(\".card-img\")!;\r\nlet cardNames: NodeListOf<HTMLElement> = document.querySelectorAll(\".name\")!;\r\nlet buttons: NodeListOf<HTMLElement> = document.querySelectorAll(\".main-button\")!;\r\n\r\nconst prefix: string = \"cks2693-\"!;\r\nconst critterKey: string = prefix + \"critters\"!;\r\nconst villagerKey: string = prefix + \"villagers\"!;\r\n\r\nlet currentArray = [];\r\nlet favoriteCrittersArray = [];\r\nlet favoriteVillagersArray = [];\r\n\r\nconst storedCritters = localStorage.getItem(critterKey);\r\nconst storedVillagers = localStorage.getItem(villagerKey);\r\n\r\nif (storedCritters) {\r\n\tfavoriteCrittersArray = JSON.parse(storedCritters);\r\n}\r\n\r\nif (storedVillagers) {\r\n\tfavoriteVillagersArray = JSON.parse(storedVillagers);\r\n}\r\n\r\nconst API_URL = \"https://api.nookipedia.com/\";\r\nconst API_KEY = \"ee03ae8c-8f89-495a-a9ed-d4e07fa9df9f\";\r\n\r\n// grab data from api\r\nconst getData = (url) => {\r\n\tlet xhr = new XMLHttpRequest();\r\n\r\n\txhr.onload = dataLoaded;\r\n\r\n\txhr.onerror = dataError;\r\n\r\n\txhr.open(\"GET\", url);\r\n\txhr.send();\r\n};\r\n\r\n// take data from api and puts it on the page\r\nconst dataLoaded = (e) => {\r\n\t// getting values from the api\r\n\tlet xhr = e.target;\r\n\tlet obj = JSON.parse(xhr.responseText);\r\n\tcurrentArray = Object.values(obj);\r\n\r\n\t// checks if we're displaying critters or villagers\r\n\tif (\r\n\t\te.target.responseURL.includes(\"fish\") ||\r\n\t\te.target.responseURL.includes(\"bugs\")\r\n\t) {\r\n\t\t// filter based on if the critters are fish or bugs\r\n\t\tif (e.target.responseURL.includes(\"fish\")) filterFish();\r\n\t\telse if (e.target.responseURL.includes(\"bugs\")) filterBugs();\r\n\r\n\r\n\t\t// display cards for the critters and then set them up for interactivity\r\n\t\tdisplayBugOrFish(currentArray);\r\n\t\tsetUpCards(currentArray);\r\n\r\n\t\t// adjusting image size\r\n\t\tcardImgs.forEach((e) => (e.style.height = \"80%\"));\r\n\r\n\t\t// look it's the villagers i was talking about\r\n\t} else if (e.target.responseURL.includes(\"villagers\")) {\r\n\t\t//filters the villagers and sets up the cards for display and interactivity\r\n\t\tfilterVillagers();\r\n\t\tdisplayVillagers(currentArray);\r\n\t\tsetUpCards(currentArray);\r\n\r\n\t\t// adjusting image size\r\n\t\tcardImgs.forEach(\r\n\t\t\t(e) => ((e.style.height = \"70%\"), (e.style.width = \"30%\"))\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// no data found (this should theoretically never be called)\r\nconst dataError = () => {\r\n\tconsole.log(\"An error occured\");\r\n};\r\n\r\nconst buttonPress = (e) => {\r\n\tlet url = API_URL;\r\n\r\n\tconsole.log(e.target);\r\n\r\n\tcontainer.innerHTML = \"\";\r\n\r\n\t// clicking a critter button sets the endpoint to that critter...\r\n\tif (e.target.value === \"fish\" || e.target.value === \"bugs\") {\r\n\t\turl += \"nh/\" + e.target.value + \"?api_key=\" + API_KEY;\r\n\t\tgetData(url);\r\n\t}\r\n\t// ...and clicking the villager button sets the endpoint to villagers!\r\n\telse if (e.target.value === \"villagers\") {\r\n\t\turl += e.target.value + \"?api_key=\" + API_KEY;\r\n\t\tgetData(url);\r\n\t}\r\n\t// clicking the favorites button works with no api calls!\r\n\telse if (e.target.value === \"favorites\") {\r\n\t\tloadFavorites(favoritesDropDown.value);\r\n\t}\r\n};\r\n\r\n// manipulates the DOM to display cards for the critters loaded\r\nconst displayBugOrFish = (array) => {\r\n\tif (clearButton != null) clearButton.remove();\r\n\r\n\tinstructions.innerHTML =\r\n\t\t\"Hover over cards to flip them or click to favorite!\";\r\n\r\n\tarray.forEach((result) => {\r\n\t\tcontainer.insertAdjacentHTML(\r\n\t\t\t\"beforeend\",\r\n\t\t\t`<div class='result' data-type='critter'>\r\n                        <div class='result-card' data-type='critter'>\r\n                        <div class='front' data-type='critter'>\r\n                            <img class='card-img' data-type='critter' src=${result.image_url} />\r\n                            <p class='name' data-type='critter'>${result.name}</p>\r\n                        </div>\r\n                        <div class='back'>\r\n                            <p>${result.name}</p>\r\n                            <p>Months Available: ${result.north.months}</p>\r\n                            <p>Location: ${result.location}</p>\r\n                            <p>Rarity: ${result.rarity}</p>\r\n                            <p>Price: ${result.sell_nook}</p>\r\n                        </div>\r\n                        </div>\r\n                    </div>`\r\n\t\t);\r\n\t});\r\n};\r\n\r\n// manipulates the DOM to display cards for the villagers loaded\r\nconst displayVillagers = (array) => {\r\n\tif (clearButton != null) clearButton.remove();\r\n\r\n\tinstructions.innerHTML =\r\n\t\t\"Hover over cards to flip them or click to favorite!\";\r\n\r\n\tarray.forEach((result) => {\r\n\t\tcontainer.insertAdjacentHTML(\r\n\t\t\t\"beforeend\",\r\n\t\t\t`<div class='result' data-type='villager'>\r\n                        <div class='result-card' data-type='villager'>\r\n                        <div class='front' data-type='villager'>\r\n                            <img class='card-img' data-type='villager' src=${result.image_url} />\r\n                            <p class='name' data-type='villager'>${result.name}</p>\r\n                        </div>\r\n                        <div class='back' data-type='villager'>\r\n                            <p>${result.name}</p>\r\n                            <p>Species: ${result.species}</p>\r\n                            <p>Gender: ${result.gender}</p>\r\n                            <p>Personality: ${result.personality}</p>\r\n                            <p>Birthday: ${result.birthday_month} ${result.birthday_day}</p>\r\n                        </div>\r\n                        </div>\r\n                    </div>`\r\n\t\t);\r\n\t});\r\n};\r\n\r\n// filters the currentArray based on fish location\r\nconst filterFish = () => filterLocation(fishDropDown.value);\r\n\r\n// filters the currentArray based on bug locations (this can probably be simplified but it\r\n// wasn't as easy as the fish)\r\nconst filterBugs = () => {\r\n\tswitch (bugsDropDown.value) {\r\n\t\tcase \"flying\":\r\n\t\t\tfilterLocation(\"Flying\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"ground\":\r\n\t\t\tfilterLocation(\"ground\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"trees\":\r\n\t\t\tfilterLocation(\"trees\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"flowers\":\r\n\t\t\tfilterLocation(\"flowers\");\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"on\":\r\n\t\t\tcurrentArray = currentArray.filter(\r\n\t\t\t\t(critter) =>\r\n\t\t\t\t\tcritter.location.includes(\"On\") || critter.location.includes(\"on\")\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\n// filters the current array based on villager species (there are so many,,,)\r\nconst filterVillagers = () => filterSpecies(villagersDropDown.value);\r\n\r\n// adds clicked card to a list of either favorite villagers or critters\r\nconst favoriteClick = (e) => {\r\n\tlet newData = currentArray[parseInt(e.target.dataset.index)];\r\n\r\n\tif (e.target.dataset.type === \"villager\") {\r\n\t\tif (favoriteVillagersArray.includes(newData)) {\r\n\t\t\tfavoriteVillagersArray.splice(favoriteVillagersArray.indexOf(newData), 1);\r\n\t\t\tlocalStorage.setItem(villagerKey, JSON.stringify(favoriteVillagersArray));\r\n\t\t} else {\r\n\t\t\tfavoriteVillagersArray.push(newData);\r\n\t\t\tlocalStorage.setItem(villagerKey, JSON.stringify(favoriteVillagersArray));\r\n\t\t}\r\n\t} else if (e.target.dataset.type === \"critter\") {\r\n\t\tif (favoriteCrittersArray.includes(newData)) {\r\n\t\t\tfavoriteCrittersArray.splice(favoriteCrittersArray.indexOf(newData), 1);\r\n\t\t\tlocalStorage.setItem(critterKey, JSON.stringify(favoriteCrittersArray));\r\n\t\t} else {\r\n\t\t\tfavoriteCrittersArray.push(newData);\r\n\t\t\tlocalStorage.setItem(critterKey, JSON.stringify(favoriteCrittersArray));\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// updates the DOM variables to their current state\r\nconst updateDOM = () => {\r\n\tcards = document.querySelectorAll(\".result\");\r\n\tcardFront = document.querySelectorAll(\".front\");\r\n\tcardBack = document.querySelectorAll(\".back\");\r\n\tcardImgs = document.querySelectorAll(\".card-img\");\r\n\tcardNames = document.querySelectorAll(\".name\");\r\n};\r\n\r\n// sets up cards to be interactable\r\nconst setUpCards = (array) => {\r\n\tupdateDOM();\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tcards[i].dataset.index = `${i}`;\r\n\t\tcardFront[i].dataset.index = `${i}`;\r\n\t\tcardBack[i].dataset.index = `${i}`;\r\n\t\tcardImgs[i].dataset.index = `${i}`;\r\n\t\tcardNames[i].dataset.index = `${i}`;\r\n\t\tcards[i].onclick = favoriteClick;\r\n\t}\r\n};\r\n\r\n// filter helper method for critters\r\nconst filterLocation = (string) => {\r\n\tcurrentArray = currentArray.filter((critter) =>\r\n\t\tcritter.location.includes(string)\r\n\t);\r\n};\r\n\r\n// filter helper method for villagers. not really needed but oh well!\r\nconst filterSpecies = (string) => {\r\n\tcurrentArray = currentArray.filter((villager) =>\r\n\t\tvillager.species.includes(string)\r\n\t);\r\n};\r\n\r\n// displays either favorite critter or villager array\r\nconst loadFavorites = (value) => {\r\n\tif (value === \"critters\") {\r\n\t\tif (favoriteCrittersArray.length === 0) {\r\n\t\t\tinstructions.innerHTML =\r\n\t\t\t\t\"Nothing currently favorited, click a button to load items!\";\r\n\t\t\tcontainer.innerHTML = \"\";\r\n\t\t} else {\r\n\t\t\tdisplayBugOrFish(favoriteCrittersArray);\r\n\t\t\tupdateDOM();\r\n\r\n\t\t\t// adjusting image size\r\n\t\t\tcardImgs.forEach((e) => (e.style.height = \"80%\"));\r\n\r\n\t\t\tcontainer.insertAdjacentHTML(\r\n\t\t\t\t\"afterend\",\r\n\t\t\t\t`<button id='clear' value=${value}>Clear</button>`\r\n\t\t\t);\r\n\t\t\tclearButton = document.querySelector(\"#clear\");\r\n\t\t\tclearButton.onclick = clearFavorites;\r\n\t\t}\r\n\t} else if (value === \"villagers\") {\r\n\t\tif (favoriteVillagersArray.length === 0) {\r\n\t\t\tinstructions.innerHTML =\r\n\t\t\t\t\"Nothing currently favorited, click a button to load items!\";\r\n\t\t\tcontainer.innerHTML = \"\";\r\n\t\t} else {\r\n\t\t\tdisplayVillagers(favoriteVillagersArray);\r\n\t\t\tupdateDOM();\r\n\r\n\t\t\t// adjusting image size\r\n\t\t\tcardImgs.forEach(\r\n\t\t\t\t(e) => ((e.style.height = \"70%\"), (e.style.width = \"30%\"))\r\n\t\t\t);\r\n\r\n\t\t\tcontainer.insertAdjacentHTML(\r\n\t\t\t\t\"afterend\",\r\n\t\t\t\t`<button id='clear' value=${value}>Clear</button>`\r\n\t\t\t);\r\n\t\t\tclearButton = document.querySelector(\"#clear\");\r\n\t\t\tclearButton.onclick = clearFavorites;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// clears the current favorites array\r\nconst clearFavorites = (e) => {\r\n\tif (e.target.value === \"critters\") {\r\n\t\tfavoriteCrittersArray = [];\r\n\t\tlocalStorage.setItem(critterKey, JSON.stringify(favoriteCrittersArray));\r\n\t} else if (e.target.value === \"villagers\") {\r\n\t\tfavoriteVillagersArray = [];\r\n\t\tlocalStorage.setItem(villagerKey, JSON.stringify(favoriteVillagersArray));\r\n\t}\r\n\tloadFavorites(e.target.value);\r\n\tclearButton.remove();\r\n};\r\n\r\nbuttons.forEach((button) => {\r\n\tbutton.addEventListener(\"click\", buttonPress);\r\n});"],"names":["container","document","querySelector","fishDropDown","bugsDropDown","villagersDropDown","favoritesDropDown","clearButton","instructions","cards","querySelectorAll","cardFront","cardBack","cardImgs","cardNames","buttons","prefix","critterKey","villagerKey","currentArray","favoriteCrittersArray","favoriteVillagersArray","storedCritters","localStorage","getItem","storedVillagers","JSON","parse","API_KEY","getData","url","xhr","XMLHttpRequest","onload","dataLoaded","onerror","dataError","open","send","e","target","obj","responseText","Object","values","responseURL","includes","filterFish","filterBugs","displayBugOrFish","setUpCards","forEach","style","height","filterVillagers","displayVillagers","width","console","log","buttonPress","innerHTML","value","loadFavorites","array","remove","result","insertAdjacentHTML","image_url","name","north","months","location","rarity","sell_nook","species","gender","personality","birthday_month","birthday_day","filterLocation","filter","critter","filterSpecies","favoriteClick","newData","parseInt","dataset","index","type","splice","indexOf","setItem","stringify","push","updateDOM","i","length","onclick","string","villager","clearFavorites","button","addEventListener"],"sourceRoot":""}