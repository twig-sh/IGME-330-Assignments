/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/audio.js":
/*!**********************!*\
  !*** ./src/audio.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyserNode: () => (/* binding */ analyserNode),\n/* harmony export */   audioCtx: () => (/* binding */ audioCtx),\n/* harmony export */   loadSoundFile: () => (/* binding */ loadSoundFile),\n/* harmony export */   pauseCurrentSound: () => (/* binding */ pauseCurrentSound),\n/* harmony export */   playCurrentSound: () => (/* binding */ playCurrentSound),\n/* harmony export */   setVolume: () => (/* binding */ setVolume),\n/* harmony export */   setupWebaudio: () => (/* binding */ setupWebaudio),\n/* harmony export */   toggleHighshelf: () => (/* binding */ toggleHighshelf),\n/* harmony export */   toggleLowshelf: () => (/* binding */ toggleLowshelf)\n/* harmony export */ });\n// 1 - our WebAudio context, **we will export and make this public at the bottom of the file**\nvar audioCtx;\n\n// **These are \"private\" properties - these will NOT be visible outside of this module (i.e. file)**\n// 2 - WebAudio nodes that are part of our WebAudio audio routing graph\nvar element, sourceNode, analyserNode, gainNode, highShelfBiquadFilter, lowShelfBiquadFilter;\n\n// 3 - here we are faking an enumeration\nvar DEFAULTS = Object.freeze({\n  gain: .5,\n  numSamples: 256\n});\n\n// 4 - create a new array of 8-bit integers (0-255)\n// this is a typed array to hold the audio frequency data\nvar audioData = new Uint8Array(DEFAULTS.numSamples / 2);\n\n// **Next are \"public\" methods - we are going to export all of these at the bottom of this file**\n\nvar setupWebaudio = function setupWebaudio(filePath) {\n  // 1 - The || is because WebAudio has not been standardized across browsers yet\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\n  audioCtx = new AudioContext();\n\n  // 2 - this creates an <audio> element\n  element = new Audio(); //document.querySelector(\"audio\");\n\n  // 3 - have it point at a sound file\n  loadSoundFile(filePath);\n\n  // 4 - create an a source node that points at the <audio> element\n  sourceNode = audioCtx.createMediaElementSource(element);\n\n  // 5 - create an analyser node\n  analyserNode = audioCtx.createAnalyser(); // note the UK spelling of \"Analyser\"\n\n  // create high and lowshelf nodes\n  highShelfBiquadFilter = audioCtx.createBiquadFilter();\n  highShelfBiquadFilter.type = \"highshelf\";\n  lowShelfBiquadFilter = audioCtx.createBiquadFilter();\n  lowShelfBiquadFilter.type = \"lowshelf\";\n\n  /*\r\n  // 6\r\n  We will request DEFAULTS.numSamples number of samples or \"bins\" spaced equally \r\n  across the sound spectrum.\r\n  \r\n  If DEFAULTS.numSamples (fftSize) is 256, then the first bin is 0 Hz, the second is 172 Hz, \r\n  the third is 344Hz, and so on. Each bin contains a number between 0-255 representing \r\n  the amplitude of that frequency.\r\n  */\n\n  // fft stands for Fast Fourier Transform\n  analyserNode.fftSize = DEFAULTS.numSamples;\n\n  // 7 - create a gain (volume) node\n  gainNode = audioCtx.createGain();\n  gainNode.gain.value = DEFAULTS.gain;\n\n  // 8 - connect the nodes - we now have an audio graph\n  sourceNode.connect(highShelfBiquadFilter);\n  highShelfBiquadFilter.connect(lowShelfBiquadFilter);\n  lowShelfBiquadFilter.connect(analyserNode);\n  analyserNode.connect(gainNode);\n  gainNode.connect(audioCtx.destination);\n};\nvar loadSoundFile = function loadSoundFile(filePath) {\n  element.src = filePath;\n};\nvar playCurrentSound = function playCurrentSound() {\n  element.play();\n};\nvar pauseCurrentSound = function pauseCurrentSound() {\n  element.pause();\n};\nvar setVolume = function setVolume(value) {\n  value = Number(value); // make sure that it's a Number rather than a String\n  gainNode.gain.value = value;\n};\nvar toggleHighshelf = function toggleHighshelf(value) {\n  highShelfBiquadFilter.frequency.setValueAtTime(1000, audioCtx.currentTime);\n  highShelfBiquadFilter.gain.setValueAtTime(value, audioCtx.currentTime);\n};\nvar toggleLowshelf = function toggleLowshelf(value) {\n  lowShelfBiquadFilter.frequency.setValueAtTime(1000, audioCtx.currentTime);\n  lowShelfBiquadFilter.gain.setValueAtTime(value, audioCtx.currentTime);\n};\n\n\n//# sourceURL=webpack://sheherlis-t-hw2/./src/audio.js?");

/***/ }),

/***/ "./src/canvas.js":
/*!***********************!*\
  !*** ./src/canvas.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   draw: () => (/* binding */ draw),\n/* harmony export */   setupCanvas: () => (/* binding */ setupCanvas)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/*\r\n\tThe purpose of this file is to take in the analyser node and a <canvas> element: \r\n\t  - the module will create a drawing context that points at the <canvas> \r\n\t  - it will store the reference to the analyser node\r\n\t  - in draw(), it will loop through the data in the analyser node\r\n\t  - and then draw something representative on the canvas\r\n\t  - maybe a better name for this file/module would be *visualizer.js* ?\r\n*/\n\n\nvar ctx, canvasWidth, canvasHeight, gradient, analyserNode, audioData;\nvar Spinner = /*#__PURE__*/function () {\n  function Spinner(x, y) {\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    var rotation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var scale = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    var filePath = arguments.length > 5 ? arguments[5] : undefined;\n    _classCallCheck(this, Spinner);\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.rotation = rotation;\n    this.scale = scale;\n    this.filePath = filePath;\n    this.img = new Image();\n    this.img.src = this.filePath;\n  }\n  return _createClass(Spinner, [{\n    key: \"update\",\n    value: function update() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // YOU DO THIS - increase the .x, and .y properties by 1\n      /* this.x++;\r\n      this.y++; */\n      if (params.showRotation) {\n        this.rotation += 0.01;\n      } else {\n        this.rotation = 0;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      // YOU DO THIS \n      // fill a circle - utilize the ctx argument, and the .x, .y, .radius and .color properties\n      // don't forget about ctx.save() and ctx.restore()\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(this.x, this.y);\n      ctx.scale(this.scale, this.scale);\n      ctx.rotate(this.rotation);\n      ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.fillStyle = \"blue\";\n      ctx.fill();\n      ctx.drawImage(this.img, -this.img.width / 2, -this.img.height / 2, this.img.width, this.img.height);\n      ctx.restore();\n    }\n  }]);\n}();\n_defineProperty(Spinner, \"type\", \"arc\");\nvar sprites = [];\nvar visualizerRadius = 300;\nvar setupCanvas = function setupCanvas(canvasElement, analyserNodeRef) {\n  // create drawing context\n  ctx = canvasElement.getContext(\"2d\");\n  canvasWidth = canvasElement.width;\n  canvasHeight = canvasElement.height;\n  // create a gradient that runs top to bottom\n  gradient = _utils_js__WEBPACK_IMPORTED_MODULE_0__.getLinearGradient(ctx, 0, 0, 0, canvasHeight, [{\n    percent: 0,\n    color: \"teal\"\n  }, {\n    percent: 1,\n    color: \"violet\"\n  }]);\n  // keep a reference to the analyser node\n  analyserNode = analyserNodeRef;\n  // this is the array where the analyser data will be stored\n  audioData = new Uint8Array(analyserNode.fftSize / 2);\n  sprites.push(new Spinner(canvasWidth / 2, canvasHeight / 2, visualizerRadius, 0, 0.25, \"imgs/among-us.png\"));\n  sprites.push(new Spinner(60, canvasHeight - 60, 0, 0, 0.4, \"imgs/music-note.png\"));\n};\nvar draw = function draw() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // 1 - populate the audioData array with the frequency data from the analyserNode\n  // notice these arrays are passed \"by reference\" \n  if (params.showFrequency) {\n    analyserNode.getByteFrequencyData(audioData);\n  } else {\n    analyserNode.getByteTimeDomainData(audioData);\n  }\n\n  // 2 - draw background\n  ctx.save();\n  ctx.fillStyle = \"black\";\n  ctx.globalAlpha = 0.1;\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  ctx.restore();\n  if (params.showCircles) {\n    for (var i = 0; i < sprites.length; i++) {\n      sprites[i].update(params);\n      sprites[i].draw(ctx);\n    }\n  }\n\n  // 3 - draw gradient\n  if (params.showGradient) {\n    ctx.save();\n    ctx.fillStyle = gradient;\n    ctx.globalAlpha = 0.3;\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    ctx.restore();\n  }\n\n  // 4 - draw bars\n  if (params.showBars) {\n    var barSpacing = 4;\n    var margin = 5;\n    var screenWidthForBars = canvasWidth - audioData.length * barSpacing - margin * 2;\n    var barWidth = visualizerRadius / (audioData.length / 2);\n    var barHeight = 200;\n    var topSpacing = 100;\n    ctx.fillStyle = \"rgba(0,0,0,0.1)\";\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.save();\n    ctx.fillStyle = \"red\";\n    ctx.translate(ctx.canvas.width / 1.985, ctx.canvas.height / 3.19);\n    var _iterator = _createForOfIteratorHelper(audioData),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var b = _step.value;\n        var percent = b / 255;\n        if (percent < 0.02) percent = 0.02;\n        ctx.translate(barWidth, 0);\n        ctx.rotate(Math.PI * 1 / 16);\n        ctx.save();\n        ctx.scale(1, -1);\n        ctx.fillStyle = \"rgb(\".concat(230 - b, \", \").concat(b, \", \").concat(b - 128, \")\");\n        ctx.fillRect(0, 0, barWidth, percent * topSpacing);\n        ctx.restore();\n        ctx.translate(10, 0);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    ctx.restore();\n  }\n\n  // 5 - draw circles\n\n  // 6 - bitmap manipulation\n  // TODO: right now. we are looping though every pixel of the canvas (320,000 of them!), \n  // regardless of whether or not we are applying a pixel effect\n  // At some point, refactor this code so that we are looping though the image data only if\n  // it is necessary\n\n  // A) grab all of the pixels on the canvas and put them in the `data` array\n  // `imageData.data` is a `Uint8ClampedArray()` typed array that has 1.28 million elements!\n  // the variable `data` below is a reference to that array \n  var imageData = ctx.getImageData(0, 0, canvasWidth, canvasHeight);\n  var data = imageData.data;\n  var length = data.length;\n  var width = imageData.width; // not using here\n\n  // B) Iterate through each pixel, stepping 4 elements at a time (which is the RGBA for 1 pixel)\n  for (var _i = 0; _i < length; _i += 4) {\n    // C) randomly change every 20th pixel to red\n    if (Math.random() < params.showNoise) {\n      // data[i] is the red channel\n      // data[i+1] is the green channel\n      // data[i+2] is the blue channel\n      // data[i+3] is the alpha channel\n      data[_i] = data[_i + 1] = data[_i + 2] = 0; // zero out the red and green and blue channels\n      data[_i + 1] = 255; // make the red channel 100% green\n    } // end if\n\n    // invert?\n    if (params.showInvert) {\n      var red = data[_i],\n        green = data[_i + 1],\n        blue = data[_i + 2];\n      data[_i] = 255 - red; // set red\n      data[_i + 1] = 255 - green; // set green\n      data[_i + 2] = 255 - blue; // set blue\n      // data [i + 3] is the alpha, but we're leaving that alone\n    }\n  } // end for\n\n  if (params.showEmboss) {\n    // note we are stepping through *each* sub-pixel\n    for (var _i2 = 0; _i2 < length; _i2++) {\n      if (_i2 % 4 == 3) continue; // skip alpha channel\n      data[_i2] = 127 + 2 * data[_i2] - data[_i2 + 4] - data[_i2 + width * 4];\n    }\n  }\n\n  // D) copy image data back to canvas\n  ctx.putImageData(imageData, 0, 0);\n};\n\n\n//# sourceURL=webpack://sheherlis-t-hw2/./src/canvas.js?");

/***/ }),

/***/ "./src/loader.js":
/*!***********************!*\
  !*** ./src/loader.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main.js */ \"./src/main.js\");\n\nwindow.onload = function () {\n  console.log(\"window.onload called\");\n  // 1 - do preload here - load fonts, images, additional sounds, etc...\n\n  // 2 - start up app\n  _main_js__WEBPACK_IMPORTED_MODULE_0__.init();\n};\n\n//# sourceURL=webpack://sheherlis-t-hw2/./src/loader.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _audio_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audio.js */ \"./src/audio.js\");\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./canvas.js */ \"./src/canvas.js\");\n/*\r\n\tmain.js is primarily responsible for hooking up the UI to the rest of the application \r\n\tand setting up the main event loop\r\n*/\n\n// We will write the functions in this file in the traditional ES5 way\n// In this instance, we feel the code is more readable if written this way\n// If you want to re-write these as ES6 arrow functions, to be consistent with the other files, go ahead!\n\n\n\n\nvar drawParams = {\n  showGradient: true,\n  showBars: true,\n  showCircles: true,\n  showInvert: false,\n  showEmboss: false,\n  showFrequency: true,\n  showNoise: 0,\n  showRotation: false\n};\nvar fps = 60;\nvar title, information, songs;\n\n// 1 - here we are faking an enumeration\nvar DEFAULTS = Object.freeze({\n  sound1: \"media/New Adventure Theme.mp3\"\n});\nvar loadXmlXHR = function loadXmlXHR() {\n  var url = \"data/av-data.json\";\n  var xhr = new XMLHttpRequest();\n  xhr.onload = function (e) {\n    console.log(\"In onload - HTTP Status Code = \".concat(e.target.status));\n    var text = e.target.responseText;\n    var json = JSON.parse(text);\n    title = json.title;\n    information = json.information;\n    songs = json.audio;\n    document.title = title;\n    document.querySelector(\"#header\").innerHTML = title;\n    document.querySelector(\"#info\").innerHTML = information;\n    for (var i = 0; i < songs.length; i++) {\n      if (i == 0) {\n        document.querySelector(\"#select-track\").innerHTML += \"<option value=\\\"\".concat(songs[i].path, \"\\\" selected>\").concat(songs[i].title, \"</option>\");\n      } else {\n        document.querySelector(\"#select-track\").innerHTML += \"<option value=\\\"\".concat(songs[i].path, \"\\\">\").concat(songs[i].title, \"</option>\");\n      }\n    }\n  };\n  xhr.onerror = function (e) {\n    return console.log(\"In onerror - HTTP Status Code = \".concat(e.target.status));\n  };\n  xhr.open(\"GET\", url);\n  xhr.send();\n};\nvar loop = function loop() {\n  /* NOTE: This is temporary testing code that we will delete in Part II */\n  setTimeout(loop, 1000 / fps);\n  _canvas_js__WEBPACK_IMPORTED_MODULE_2__.draw(drawParams);\n};\nvar setupUI = function setupUI(canvasElement) {\n  // A - hookup fullscreen button\n  var fsButton = document.querySelector(\"#btn-fs\");\n\n  // B - hookup play button\n  var playButton = document.querySelector(\"#btn-play\");\n\n  // add .onclick event to button\n  fsButton.onclick = function (e) {\n    console.log(\"goFullscreen() called\");\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__.goFullscreen(canvasElement);\n  };\n\n  // add .onclick event to button\n  playButton.onclick = function (e) {\n    console.log(\"audioCtx.state before = \".concat(_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state));\n\n    // check if context is in suspended state (autoplay policy)\n    if (_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state == \"suspended\") {\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.resume();\n    }\n    console.log(\"audioCtx.state after = \".concat(_audio_js__WEBPACK_IMPORTED_MODULE_1__.audioCtx.state));\n    if (e.target.dataset.playing == \"no\") {\n      // if track is currently paused, play it\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.playCurrentSound();\n      e.target.dataset.playing = \"yes\"; // our CSS will set the text to \"Pause\"\n      // if track IS playing, pause it\n      drawParams.showRotation = true;\n    } else {\n      _audio_js__WEBPACK_IMPORTED_MODULE_1__.pauseCurrentSound();\n      e.target.dataset.playing = \"no\"; // our CSS will set the text to \"Play\"\n      drawParams.showRotation = false;\n    }\n  };\n\n  // C - hookup volume slider & label\n  var volumeSlider = document.querySelector(\"#slider-volume\");\n  var volumeLabel = document.querySelector(\"#label-volume\");\n\n  // add .oninput event to slider\n  volumeSlider.oninput = function (e) {\n    // set the gain\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.setVolume(e.target.value);\n    // update value of label to match value of slider\n    volumeLabel.innerHTML = Math.round(e.target.value / 2 * 100);\n  };\n\n  // set value of label to match initial value of slider\n  volumeSlider.dispatchEvent(new Event(\"input\"));\n\n  // D - hookup track <select>\n  var trackSelect = document.querySelector(\"#select-track\");\n  // add .onchange event to <select>\n  trackSelect.onchange = function (e) {\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.loadSoundFile(e.target.value);\n    // pause the current track if it is playing\n    if (playButton.dataset.playing == \"yes\") {\n      playButton.dispatchEvent(new MouseEvent(\"click\"));\n    }\n  };\n  var gradientCB = document.querySelector(\"#cb-gradient\");\n  var barsCB = document.querySelector(\"#cb-bars\");\n  var circlesCB = document.querySelector(\"#cb-circles\");\n  var noiseSlider = document.querySelector(\"#slider-noise\");\n  var noiseLabel = document.querySelector(\"#label-noise\");\n  var invertCB = document.querySelector(\"#cb-invert\");\n  var embossCB = document.querySelector(\"#cb-emboss\");\n  var highshelfSlider = document.querySelector(\"#slider-highshelf\");\n  var lowshelfSlider = document.querySelector(\"#slider-lowshelf\");\n  var lowshelfLabel = document.querySelector(\"#label-lowshelf\");\n  var highshelfLabel = document.querySelector(\"#label-highshelf\");\n  var frequencyRadio = document.querySelector(\"#radio-frequency\");\n  var waveformRadio = document.querySelector(\"#radio-waveform\");\n  gradientCB.onchange = function (e) {\n    drawParams.showGradient = gradientCB.checked;\n  };\n  barsCB.onchange = function (e) {\n    drawParams.showBars = barsCB.checked;\n  };\n  circlesCB.onchange = function (e) {\n    drawParams.showCircles = circlesCB.checked;\n  };\n  noiseSlider.oninput = function (e) {\n    drawParams.showNoise = noiseSlider.value;\n    noiseLabel.innerHTML = e.target.value;\n  };\n  invertCB.onchange = function (e) {\n    drawParams.showInvert = invertCB.checked;\n  };\n  embossCB.onchange = function (e) {\n    drawParams.showEmboss = embossCB.checked;\n  };\n  highshelfSlider.oninput = function (e) {\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.toggleHighshelf(highshelfSlider.value);\n    highshelfLabel.innerHTML = Math.round(e.target.value);\n  };\n  lowshelfSlider.oninput = function (e) {\n    _audio_js__WEBPACK_IMPORTED_MODULE_1__.toggleLowshelf(lowshelfSlider.value);\n    lowshelfLabel.innerHTML = Math.round(e.target.value);\n  };\n  frequencyRadio.onchange = function (e) {\n    drawParams.showFrequency = frequencyRadio.checked;\n  };\n  waveformRadio.onchange = function (e) {\n    drawParams.showFrequency = frequencyRadio.checked;\n  };\n}; // end setupUI\n\nvar init = function init() {\n  loadXmlXHR();\n  _audio_js__WEBPACK_IMPORTED_MODULE_1__.setupWebaudio(DEFAULTS.sound1);\n  console.log(\"init called\");\n  console.log(\"Testing utils.getRandomColor() import: \".concat(_utils_js__WEBPACK_IMPORTED_MODULE_0__.getRandomColor()));\n  var canvasElement = document.querySelector(\"canvas\"); // hookup <canvas> element\n  setupUI(canvasElement);\n  _canvas_js__WEBPACK_IMPORTED_MODULE_2__.setupCanvas(canvasElement, _audio_js__WEBPACK_IMPORTED_MODULE_1__.analyserNode);\n  loop();\n};\n\n\n//# sourceURL=webpack://sheherlis-t-hw2/./src/main.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLinearGradient: () => (/* binding */ getLinearGradient),\n/* harmony export */   getRandomColor: () => (/* binding */ getRandomColor),\n/* harmony export */   goFullscreen: () => (/* binding */ goFullscreen),\n/* harmony export */   makeColor: () => (/* binding */ makeColor)\n/* harmony export */ });\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar makeColor = function makeColor(red, green, blue) {\n  var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  return \"rgba(\".concat(red, \",\").concat(green, \",\").concat(blue, \",\").concat(alpha, \")\");\n};\nvar getRandom = function getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n};\nvar getRandomColor = function getRandomColor() {\n  var floor = 35; // so that colors are not too bright or too dark \n  var getByte = function getByte() {\n    return getRandom(floor, 255 - floor);\n  };\n  return \"rgba(\".concat(getByte(), \",\").concat(getByte(), \",\").concat(getByte(), \",1)\");\n};\nvar getLinearGradient = function getLinearGradient(ctx, startX, startY, endX, endY, colorStops) {\n  var lg = ctx.createLinearGradient(startX, startY, endX, endY);\n  var _iterator = _createForOfIteratorHelper(colorStops),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var stop = _step.value;\n      lg.addColorStop(stop.percent, stop.color);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return lg;\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API\nvar goFullscreen = function goFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.mozRequestFullscreen) {\n    element.mozRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    // camel-cased 'S' was changed to 's' in spec\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n  // .. and do nothing if the method is not supported\n};\n\n\n//# sourceURL=webpack://sheherlis-t-hw2/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/loader.js");
/******/ 	
/******/ })()
;